<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="api-impl-sub-flow" doc:id="2e81f8fd-73a1-4c2e-926c-d400e1426333" >
		<set-payload value='#[payload.employee.first_name ++ " " ++ payload.employee.last_name ++ " " ++ "employee profile is created in HRMS System"]' doc:name="set-employee-profile" doc:id="ed4d4d1a-58bf-4802-8630-a2f3f524edb2" />
		<ee:transform doc:name="call-back-employee-profile">
    <ee:message>
      <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
Mule::lookup('employee-profile-sample-sub-flow', payload)]]></ee:set-payload>
    </ee:message>
  </ee:transform>
	</flow>
	<flow name="employee-profile-sample-sub-flow" doc:id="fbae3439-1118-4fb4-8a42-9a8f52fb3775" >
		<logger level="INFO" doc:name="Logger" doc:id="f0729cc5-c768-490a-8931-66032d59a442" />
		<set-payload value="#[payload]" doc:name="set-payload" doc:id="5a5edd16-9dd0-43ad-b53a-6e31775a003d" />
	</flow>
	<sub-flow name="print-camel-case-sub-flow" doc:id="173a6fa8-8692-4b88-910c-40ed8751e1b5" >
		<flow-ref doc:name="api-impl-sub-flow" doc:id="1e936a98-1134-4af8-988f-05f155273351" name="api-impl-sub-flow"/>
		<ee:transform doc:name="set-data-to-camel-case" doc:id="37533a17-6d01-4e98-8b56-8b3b8ab30bb2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import java!utils::MyUtils
output application/java
---
MyUtils::toCamelCase(payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="log-payload" doc:id="af7e166a-2368-48be-88ee-36f2be107e30" message="#[payload]" />
	</sub-flow>
	<sub-flow name="print-natural-numbers-sub-flow" doc:id="04b26805-63ff-4d00-bdc3-f76f2ae0c341" >
		<set-variable value="#[1 to vars.listId]" doc:name="set-vars-listId" doc:id="b1af6874-9e7a-4cc6-8e6d-3acb83a90f88" variableName="list"/>
		<ee:transform doc:name="read-the-var-list" doc:id="9beafcb6-08ad-44b2-b53f-f1de36db2c97" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.list]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="log-payload" doc:id="5472fd67-c029-4fa3-a06e-fe314cc4f07a" message="#[payload]"/>
	</sub-flow>
	<sub-flow name="matching-id-sub-flow" doc:id="f3836ceb-ba31-41a1-81bb-ea0f953fe0b4" >
		<ee:transform doc:name="check-with-matching-id" doc:id="4790cf29-0731-497f-9733-f734f1f62650">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json skipNullOn = "everywhere"
var employeeData = {
	"employee": [{
		"id": "A007",
		"first_name": "Jan",
		"last_name": "Doe"
	}, {
		"id": "A008",
		"first_name": "Ron",
		"last_name": "David"
	}, {
		"id": "A009",
		"first_name": "Jane",
		"last_name": "Kane"
	}, {
		"id": "A010",
		"first_name": "Marsh",
		"last_name": "Megan"
	}, {
		"id": "A011",
		"first_name": "Kelly",
		"last_name": "Mitch"
	}, {
		"id": "A012",
		"first_name": "Chris",
		"last_name": "Vaste"
	}]
}
var scoreCards = 
{
    "scoreBoard": [{
            "id": "A007",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [80, 75, 89, 100]
        },
        {
            "id": "A008",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [70, 85, 69, 90]
        }, {
            "id": " A021",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [90, 87, 77, 95]
        }
    ]
}
---
{
 certificate: (employeeData.employee default [] map (employeeInfo, employeeIndex) ->
 using (getScoreCardData = (scoreCards.scoreBoard filter $.id == employeeInfo.id)[0])
 {
 (if (getScoreCardData != null) (employeeInfo) else null) ,
 (MarksBySubjectWise:
 {
 Maths: getScoreCardData.score[0],
 English: getScoreCardData.score[1],
 Arts: getScoreCardData.score[2],
 Drawings: getScoreCardData.score[3]
 }) if (getScoreCardData != null)
 })reduce ((item, accumulator = []) -> accumulator + if (item != {}) item else null)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="log-payload" doc:id="be1187e0-49c3-463c-b50a-7ddf476c7417" message="#[payload]" />
	</sub-flow>
	<sub-flow name="employee-records-sub-flow" doc:id="eb114601-4552-4357-9784-c410170856f6" >
		<ee:transform doc:name="check-corresponding-payload" doc:id="5130e7af-e2c6-4a99-98e2-b7d9eb295a27" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn = "everywhere"
var employeeData = {
	"employee": [{
		"id": "A007",
		"first_name": "Jan",
		"last_name": "Doe"
	}, {
		"id": "A008",
		"first_name": "Ron",
		"last_name": "David"
	}, {
		"id": "A009",
		"first_name": "Jane",
		"last_name": "Kane"
	}, {
		"id": "A010",
		"first_name": "Marsh",
		"last_name": "Megan"
	}, {
		"id": "A011",
		"first_name": "Kelly",
		"last_name": "Mitch"
	}, {
		"id": "A012",
		"first_name": "Chris",
		"last_name": "Vaste"
	}]
}
var scoreCards = 
{
    "scoreBoard": [{
            "id": "A007",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [80, 75, 89, 100]
        },
        {
            "id": "A008",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [70, 85, 69, 90]
        }, {
            "id": " A021",
            "subjects": ["Maths", "English", "Arts", "Drawings"],
            "score": [90, 87, 77, 95]
        }
    ]
}
---
{
 certificate: (employeeData.employee default [] map (employeeInfo, employeeIndex) ->
 using (getScoreCardData = (scoreCards.scoreBoard filter $.id == employeeInfo.id)[0])
 {
 (employeeInfo) ,
 (MarksBySubjectWise:
 {
 Maths: getScoreCardData.score[0],
 English: getScoreCardData.score[1],
 Arts: getScoreCardData.score[2],
 Drawimgs: getScoreCardData.score[3]
 }) if (getScoreCardData != null)
 })
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="log-payload" doc:id="76b9bcce-91bf-44b1-9e24-3160958c5cc5" message="#[payload]"/>
	</sub-flow>
</mule>
